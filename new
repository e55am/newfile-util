#!/usr/bin/env bash
# new -- create new file(s) from predefined template
#
# Author: essam 'https://github.com/e55am'


__usage__() { echo "Usage: $PROG [-h] FILE..."; }

__help__() {
	cat <<- __EOF__
	$(__usage__)
	Create new file from predefined template.

	Parameter:
	  FILE  One or more file name to create

	Option:
	  -h    show this help message and exit

	Example:
	Create foo.py and spam.py in current dir
	  $PROG foo.py spam.py

	Create foo.c foo.h at path/to/dir/
	  $PROG path/to/dir/foo.{h,c}

	__EOF__
}


select_extension() {
	# select file template from $HOME/Templates dir

	OLD_FILE="$FILE"

	while [[ -z "$SRC_FILE" ]]; do
		FILE="$OLD_FILE"	# don't concatenate extension

		read -p "extension >> " -r extension
		# if extension don't start with `.`, insert it
		[[ "$extension" =~ ^\. ]] && FILE+="$extension" || FILE+=".$extension"
		EXTN="${FILE##*.}"
		locate_template
	done
}


no_template() {

	local usr_choice

	echo -e "Would you like to:\n  [1] Create plaintext file\n  [2] Choose file extension"
	until [[ "$usr_choice" =~ ^(1|2)$ ]]; do
		echo "Please choose 1 or 2."
		read -p ">> " -r usr_choice
	done

	if [[ "$usr_choice" -eq 1 ]]; then
		EXTN="txt"
		locate_template

	elif [[ "$usr_choice" -eq 2 ]]; then
			select_extension
	fi

}


locate_template() {
	# find file end with specific extension

	SRC_FILE="$(find "$TEMPLATE_DIR" -iregex ".*\.$EXTN$")"

}


cp_template() {
	# copy template file from Templates dir to destination
	#
	# Parameter
	# 	$1 path/to/new/file

	FILE="$1"
	[[ $FILE =~ \..+ ]] && EXTN="${FILE##*.}" || EXTN=
	SRC_FILE=

	if [[ -z "$EXTN" ]]; then
		echo "no extension for file '$FILE'."
		no_template
	else
		locate_template

		[[ -z "$SRC_FILE" ]] && { echo "no template file for .$EXTN"; no_template; }
	fi

	cp -i "$SRC_FILE" "$FILE" && edit_template

	# unset vars for next file, if any
	FILE=
	EXTN=
	SRC_FILE=
}


edit_template() {
	# replace PROG with program name in file begging comment (e.g docstring)

	file_name="${FILE##*/}"
	sed -i "s/PROG/$file_name/g" "$FILE"
}


main() {

	# check if template dir exist
	[[ -d "$TEMPLATE_DIR" ]] || {
		echo "No 'Templates' directory found! Abort." >&2
		exit 1
	}

	while getopts ":h" opt; do
		case "$opt" in
			'h' )
				__help__
				exit 0
				;;
			* )
				echo "Invalid option: -$OPTARG" >&2
				__usage__ >&2
				exit 1
				;;
		esac
	done
	shift $((OPTIND-1))

	for i in "$@"; do
		cp_template "$i"
	done
}


PROG="${0##*/}"
TEMPLATE_DIR="$HOME/Templates/"

if [[ "$BASH_SOURCE" == "$0" ]]; then
	if [[ "$#" -eq 0 ]]; then
		echo -e "Err: No Argument(s)" >&2
		__usage__ >&2
		exit 1
	fi

	main "$@"
fi
