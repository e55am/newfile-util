#!/usr/bin/env bash
# new -- create new file(s) from template

# TODO
# add -h and --help option

usage() {
	prog=$(basename "$0")
	cat <<- __EOF__
	Usage: $prog <FILE(S)>

	Example:
	  $prog ../spam.c foo.py
	__EOF__
}


check_templates() {
	# check if template dir exist, if not extract ./template archive
	if ! [[ -d $TEMPLATE_DIR ]]; then
		echo "WARNING: No such \"$TEMPLATE_DIR\" directory" >&2
		read -rp "Do you want to create \"$TEMPLATE_DIR\" directory (y/n)? " choice

		if [[ "${choice:0:1}" == [Yy] ]]; then
			echo "extracting templates"
			extract_templates
		fi
	fi
}


extract_templates() {
	# extract template tar archive
	if [[ -f ./templates ]]; then
		tar -xf ./templates -C "$HOME/"
	fi
}

select_suffix() {
	# select file template from $HOME/Templates dir

	FILE=$1

	read -rp "extension >> " extension
	if [[ -n $extension ]]; then
		# if first char from suffix isn't '.' (dot)
		# add dot and concatenate file name with suffix
		if [[ ${extension:0:1} == "." ]]; then
			FILE+="$extension"
			# cp_template "$FILE"
		else
			FILE+=".$extension"
			# cp_template "$FILE"
		fi
	fi

	echo "$FILE"
}


no_template() {
	# if there no predefined template for FILE
	#
	# Return: (int)
	# 		1 if user enter '1' or no input, to create plain text file
	# 		2 if user want to select template

	prompt_mssg="\nWould you like to:\n  [1] Create plaintext file
	\r  [2] Choose file suffix/extension"

	echo -e "$prompt_mssg"
	read  -e -n 1 -rp " >> " choice
	case "$choice" in
		1 | "")
			return 1
			;;
		2)
			return 2
			;;
		*)
			echo -e "$RED Please choose 1 or 2.$WHITE"
			no_template
			;;
	esac

	return "$choice"
}


locate_template() {
	# find file end with specific extension/suffix
	#
	# Returns:
	# 		(string) path to template

	local src
	src=$(find "$TEMPLATE_DIR" -iregex ".*\.$1$")

	echo "$src"
}


cp_template() {
	# copy template file from Templates dir to destination
	#
	# Arguments
	# 	$1 path/to/new/file

	FILE=$1
	SUFFIX=$(basename "$FILE" | rev | cut -d "." -f1 | rev)
	SRC_FILE=$(locate_template "$SUFFIX")

	if [[ -n $SRC_FILE ]]; then
		cp "$SRC_FILE" "$1"
	else
		echo -n "unknown/no suffix for file $FILE"
		no_template
		case "$?" in
			1)
				touch "$FILE"
				;;
			2)
				FILE=$(select_suffix "$FILE")
				touch "$FILE"
				;;
		esac
	fi

	edit_template "$FILE"
}


edit_template() {
	# replace PROG with program name in file begging comment (e.g docstring)
	#
	# Arguments:
	#	$1: path to file

	prog_name=$(basename "$1")
	sed -i "s/PROG/$prog_name/g" "$1"
}


main() {
	check_templates

	for i in "$@"; do
		cp_template "$i"
	done
}


RED="\033[91m"
WHITE="\033[m"
TEMPLATE_DIR="$HOME/Templates/"

if [ "$BASH_SOURCE" == "$0" ]; then
	if [[ "$#" -eq 0 ]]; then
		echo "Err: Missing Argument(s)" >&2
		usage >&2
		exit 1
	fi

	main "$@"
fi
